{"ast":null,"code":"var _jsxFileName = \"/Users/neely/Desktop/Perscholas/SE-Homework/react-jeopardy/src/Game.js\";\n// import React, { useState, useEffect } from 'react';\n// const Game = () => {\n// \tconst [results, setResults] = useState([]);\n// \tuseEffect(() => {\n// \t\tconst search = async () => {\n// \t\t\tconst { data } = await axios.get('http://jservice.io/api/random');\n// \t\t\tsetResults(data.question);\n// \t\t};\n// \t}, []);\n// \treturn (\n// \t\t<div>\n// \t\t\t<div>{results}</div>\n// \t\t\t<button onClick={(e) => setResults(e.target)}>\n// \t\t\t\tRandom Trivia Question{' '}\n// \t\t\t</button>\n// \t\t</div>\n// \t);\n// };\n// export default Game;\n// import React from 'react';\n// import axios from 'axios'\n// class Game extends React.Component {\n// state= {results: []}\n// onButtonClick = async (e) => {\n//     const response = await axios.get('http://jservice.io/api/random');\n// }\n// render() {\n//     return(\n//         <div>\n//             <div></div>\n//             <button onClick= {onButtonClick} >Randomn Trivia Question</button>\n//         </div>\n//     )\n// }\n// }\n// export default Game\n// import React, { useState, useEffect } from 'react';\n// const Game = () => {\n// \tconst [results, setResults] = useState([]);\n// \tuseEffect(() => {\n//         fetch('http:jservice.io/api/random')\n//             .then(data => data.json())\n//             .then(data => data.question)\n// \t\t};\n//         setResults(data.question);\n// \t}, []);\n// \treturn (\n// \t\t<div>\n// \t\t\t<div>{results}</div>\n// \t\t\t<button onClick={(e) => setResults(e.target)}>\n// \t\t\t\tRandom Trivia Question{' '}\n// \t\t\t</button>\n// \t\t</div>\n// \t);\n// };\n// export default Game;\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addPoints = e => {\n      this.setState(state => ({\n        isToggleOn: !state.isToggleOn\n      }));\n    };\n\n    this.state = {\n      items: [],\n      isLoaded: true,\n      active: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://jservice.io/api/random').then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json,\n        isToggleOn: true\n      });\n    });\n  }\n\n  toggle() {}\n\n  render() {\n    const {\n      items,\n      isLoaded\n    } = this.state;\n\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Game\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 6\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            listStyleTydive: 'none'\n          },\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.question\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Catagory:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 7\n          }, this), ' ', items.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", item.category.title]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 8\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Answer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 7\n          }, this), ' ', items.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", item.answer]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 8\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Reveal Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Points:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 7\n          }, this), ' ', items.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", item.value]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 8\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Score: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleCLick,\n            children: \"add points: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"stbtract points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this);\n    }\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/neely/Desktop/Perscholas/SE-Homework/react-jeopardy/src/Game.js"],"names":["React","Component","Game","constructor","props","addPoints","e","setState","state","isToggleOn","items","isLoaded","active","handleClick","bind","componentDidMount","fetch","then","res","json","toggle","render","listStyleTydive","map","item","question","id","category","title","answer","value","handleCLick"],"mappings":"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","sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// const Game = () => {\n// \tconst [results, setResults] = useState([]);\n\n// \tuseEffect(() => {\n// \t\tconst search = async () => {\n// \t\t\tconst { data } = await axios.get('http://jservice.io/api/random');\n\n// \t\t\tsetResults(data.question);\n// \t\t};\n\n// \t}, []);\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<div>{results}</div>\n// \t\t\t<button onClick={(e) => setResults(e.target)}>\n// \t\t\t\tRandom Trivia Question{' '}\n// \t\t\t</button>\n// \t\t</div>\n// \t);\n// };\n// export default Game;\n\n// import React from 'react';\n// import axios from 'axios'\n\n// class Game extends React.Component {\n\n// state= {results: []}\n\n// onButtonClick = async (e) => {\n//     const response = await axios.get('http://jservice.io/api/random');\n// }\n// render() {\n//     return(\n\n//         <div>\n//             <div></div>\n//             <button onClick= {onButtonClick} >Randomn Trivia Question</button>\n//         </div>\n//     )\n// }\n\n// }\n\n// export default Game\n\n// import React, { useState, useEffect } from 'react';\n\n// const Game = () => {\n// \tconst [results, setResults] = useState([]);\n\n// \tuseEffect(() => {\n//         fetch('http:jservice.io/api/random')\n//             .then(data => data.json())\n//             .then(data => data.question)\n\n// \t\t};\n//         setResults(data.question);\n// \t}, []);\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<div>{results}</div>\n// \t\t\t<button onClick={(e) => setResults(e.target)}>\n// \t\t\t\tRandom Trivia Question{' '}\n// \t\t\t</button>\n// \t\t</div>\n// \t);\n// };\n// export default Game;\n\nimport React, { Component } from 'react';\n\nclass Game extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { items: [], isLoaded: true, active: false };\n        this.handleClick = this.handleClick.bind(this)\n\t}\n\tcomponentDidMount() {\n\t\tfetch('http://jservice.io/api/random')\n\t\t\t.then((res) => res.json())\n\t\t\t.then((json) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoaded: true,\n\t\t\t\t\titems: json,\n                    isToggleOn: true\n\t\t\t\t});\n                \n\t\t\t});\n\t}\n\n\ttoggle() {\n\t\t\n\t};\n\n    addPoints = (e) => {\nthis.setState((state) => ({\n    isToggleOn: !state.isToggleOn,\n}))\n    }\n\n    subtractPoints\n\n\trender() {\n\t\tconst { items, isLoaded } = this.state;\n\t\tif (!isLoaded) {\n\t\t\treturn <div>Loading ...</div>;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className='Game'>\n\t\t\t\t\t<h3>Question:</h3>{' '}\n\t\t\t\t\t<div style={{ listStyleTydive: 'none' }}>\n\t\t\t\t\t\t{items.map((item) => (\n\t\t\t\t\t\t\t<p key={item.id}>{item.question}</p>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3>Catagory:</h3>{' '}\n\t\t\t\t\t\t{items.map((item) => (\n\t\t\t\t\t\t\t<p key={item.id}> {item.category.title}</p>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3>Answer:</h3>{' '}\n\t\t\t\t\t\t{items.map((item) => (\n\t\t\t\t\t\t\t<p key={item.id}> {item.answer}</p>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t<button >\n\t\t\t\t\t\t\tReveal Answer\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3>Points:</h3>{' '}\n\t\t\t\t\t\t{items.map((item) => (\n\t\t\t\t\t\t\t<p key={item.id}> {item.value}</p>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2>Score: </h2>\n\t\t\t\t\t\t<button onClick={this.handleCLick}>add points: </button>\n\t\t\t\t\t\t<button>stbtract points</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}