{"ast":null,"code":"var _jsxFileName = \"/Users/neely/Desktop/Perscholas/SE-Homework/react-jeopardy/src/Game.js\";\n// import React, { useState, useEffect } from 'react';\n// const Game = () => {\n// \tconst [results, setResults] = useState([]);\n// \tuseEffect(() => {\n// \t\tconst search = async () => {\n// \t\t\tconst { data } = await axios.get('http://jservice.io/api/random');\n// \t\t\tsetResults(data.question);\n// \t\t};\n// \t}, []);\n// \treturn (\n// \t\t<div>\n// \t\t\t<div>{results}</div>\n// \t\t\t<button onClick={(e) => setResults(e.target)}>\n// \t\t\t\tRandom Trivia Question{' '}\n// \t\t\t</button>\n// \t\t</div>\n// \t);\n// };\n// export default Game;\n// import React from 'react';\n// import axios from 'axios'\n// class Game extends React.Component {\n// state= {results: []}\n// onButtonClick = async (e) => {\n//     const response = await axios.get('http://jservice.io/api/random');\n// }\n// render() {\n//     return(\n//         <div>\n//             <div></div>\n//             <button onClick= {onButtonClick} >Randomn Trivia Question</button>\n//         </div>\n//     )\n// }\n// }\n// export default Game\n// import React, { useState, useEffect } from 'react';\n// const Game = () => {\n// \tconst [results, setResults] = useState([]);\n// \tuseEffect(() => {\n//         fetch('http:jservice.io/api/random')\n//             .then(data => data.json())\n//             .then(data => data.question)\n// \t\t};\n//         setResults(data.question);\n// \t}, []);\n// \treturn (\n// \t\t<div>\n// \t\t\t<div>{results}</div>\n// \t\t\t<button onClick={(e) => setResults(e.target)}>\n// \t\t\t\tRandom Trivia Question{' '}\n// \t\t\t</button>\n// \t\t</div>\n// \t);\n// };\n// export default Game;\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addPoints = e => {\n      this.setState(state => ({\n        score: state.score += e\n      }));\n      fetch('http://jservice.io/api/random').then(res => res.json()).then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json,\n          isToggleOn: true\n        });\n      });\n    };\n\n    this.reset = () => {\n      this.setState(state => ({\n        score: state.score = 0\n      }));\n      fetch('http://jservice.io/api/random').then(res => res.json()).then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json\n        });\n      });\n    };\n\n    this.state = {\n      items: [],\n      isLoaded: true,\n      score: 0\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://jservice.io/api/random').then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json,\n        isToggleOn: true\n      });\n    });\n  }\n\n  toggle(e) {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  }\n\n  render() {\n    const {\n      items,\n      isLoaded\n    } = this.state;\n\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Game\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 6\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            listStyleTydive: 'none'\n          },\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.question\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Catagory:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 7\n          }, this), ' ', items.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", item.category.title]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 8\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Answer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 7\n          }, this), this.state.isToggleOn ? '' : this.state.items.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", item.answer]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 10\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.toggle,\n            children: \"Click for answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Points:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 7\n          }, this), ' ', items.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", item.value]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 8\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Score: \", this.state.score, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.addPoints(this.state.items[0].value),\n            children: [\"add points\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            classNameonClick: () => this.addPoints(-this.state.items[0].value),\n            children: \"subtract points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.reset(this.state.items[0].value),\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }, this);\n    }\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/neely/Desktop/Perscholas/SE-Homework/react-jeopardy/src/Game.js"],"names":["React","Component","Game","constructor","props","addPoints","e","setState","state","score","fetch","then","res","json","isLoaded","items","isToggleOn","reset","toggle","bind","componentDidMount","render","listStyleTydive","map","item","question","id","category","title","answer","value"],"mappings":"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","sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// const Game = () => {\n// \tconst [results, setResults] = useState([]);\n\n// \tuseEffect(() => {\n// \t\tconst search = async () => {\n// \t\t\tconst { data } = await axios.get('http://jservice.io/api/random');\n\n// \t\t\tsetResults(data.question);\n// \t\t};\n\n// \t}, []);\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<div>{results}</div>\n// \t\t\t<button onClick={(e) => setResults(e.target)}>\n// \t\t\t\tRandom Trivia Question{' '}\n// \t\t\t</button>\n// \t\t</div>\n// \t);\n// };\n// export default Game;\n\n// import React from 'react';\n// import axios from 'axios'\n\n// class Game extends React.Component {\n\n// state= {results: []}\n\n// onButtonClick = async (e) => {\n//     const response = await axios.get('http://jservice.io/api/random');\n// }\n// render() {\n//     return(\n\n//         <div>\n//             <div></div>\n//             <button onClick= {onButtonClick} >Randomn Trivia Question</button>\n//         </div>\n//     )\n// }\n\n// }\n\n// export default Game\n\n// import React, { useState, useEffect } from 'react';\n\n// const Game = () => {\n// \tconst [results, setResults] = useState([]);\n\n// \tuseEffect(() => {\n//         fetch('http:jservice.io/api/random')\n//             .then(data => data.json())\n//             .then(data => data.question)\n\n// \t\t};\n//         setResults(data.question);\n// \t}, []);\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<div>{results}</div>\n// \t\t\t<button onClick={(e) => setResults(e.target)}>\n// \t\t\t\tRandom Trivia Question{' '}\n// \t\t\t</button>\n// \t\t</div>\n// \t);\n// };\n// export default Game;\n\nimport React, { Component } from 'react';\n\nclass Game extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { items: [], isLoaded: true, score: 0 };\n\t\tthis.toggle = this.toggle.bind(this);\n\t}\n\tcomponentDidMount() {\n\t\tfetch('http://jservice.io/api/random')\n\t\t\t.then((res) => res.json())\n\t\t\t.then((json) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoaded: true,\n\t\t\t\t\titems: json,\n\t\t\t\t\tisToggleOn: true,\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\ttoggle(e) {\n\t\tthis.setState((state) => ({\n\t\t\tisToggleOn: !state.isToggleOn,\n\t\t}));\n\t}\n\n\taddPoints = (e) => {\n\t\tthis.setState((state) => ({\n\t\t\tscore: (state.score += e),\n\t\t}));\n\t\tfetch('http://jservice.io/api/random')\n\t\t\t.then((res) => res.json())\n\t\t\t.then((json) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoaded: true,\n\t\t\t\t\titems: json,\n\t\t\t\t\tisToggleOn: true,\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\treset = () => {\n\t\tthis.setState((state) => ({\n\t\t\tscore: (state.score = 0),\n\t\t}));\n\t\tfetch('http://jservice.io/api/random')\n\t\t\t.then((res) => res.json())\n\t\t\t.then((json) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoaded: true,\n\t\t\t\t\titems: json,\n\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst { items, isLoaded } = this.state;\n\t\tif (!isLoaded) {\n\t\t\treturn <div>Loading ...</div>;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className='Game'>\n\t\t\t\t\t<h3>Question:</h3>{' '}\n\t\t\t\t\t<div style={{ listStyleTydive: 'none' }}>\n\t\t\t\t\t\t{items.map((item) => (\n\t\t\t\t\t\t\t<p key={item.id}>{item.question}</p>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3>Catagory:</h3>{' '}\n\t\t\t\t\t\t{items.map((item) => (\n\t\t\t\t\t\t\t<p key={item.id}> {item.category.title}</p>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3>Answer:</h3>\n\n\t\t\t\t\t\t{this.state.isToggleOn\n\t\t\t\t\t\t\t? ''\n\t\t\t\t\t\t\t: this.state.items.map((item) => (\n\t\t\t\t\t\t\t\t\t<p key={item.id}> {item.answer}</p>\n\t\t\t\t\t\t\t  ))}\n\n\t\t\t\t\t\t<button onClick={this.toggle}>Click for answer</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3>Points:</h3>{' '}\n\t\t\t\t\t\t{items.map((item) => (\n\t\t\t\t\t\t\t<p key={item.id}> {item.value}</p>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2>Score: {this.state.score} </h2>\n\t\t\t\t\t\t<button onClick={() => this.addPoints(this.state.items[0].value)}>\n\t\t\t\t\t\t\tadd points{' '}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button classNameonClick={() => this.addPoints(-this.state.items[0].value)}>\n\t\t\t\t\t\t\tsubtract points\n\t\t\t\t\t\t</button>\n                        <button onClick={() => this.reset(this.state.items[0].value)}>Reset</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}